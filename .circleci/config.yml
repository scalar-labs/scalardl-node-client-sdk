# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    machine: true
      # set a fixed version for the image circleci/openjdk:8-jdk-node-browsers
    image: ubuntu-2004:202010-01

    working_directory: ~/scalardl-node-client-sdk

    steps:
      - checkout
      # Download and cache dependencies.
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}

      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: Docker login
          command: |
            echo ${GHCR_PAT} | docker login https://ghcr.io -u ${GHCR_USERNAME} --password-stdin

      - run:
          name: Run docker-compose up
          command: docker-compose up -d
          working_directory: .circleci/

      - run:
          name: Install node@14.15.1 # Update node for karma to work
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v14.15.1
            nvm alias default v14.15.1
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

      - run:
          name: Install npm
          command: npm install

      - run:
          name: Insert function table
          command: |
            docker cp function_schema.cql \
            circleci_scalardl-cassandra-1:function_schema.cql
            docker exec circleci_scalardl-cassandra-1 cqlsh -f function_schema.cql
          working_directory: .circleci/

      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      # run tests!
      - run:
          command: npm test
          environment:
            MOCHA_FILE: "~/scalardl-node-client-sdk/mochawesome-report/mochawesome.html"
          when: always

      - store_test_results:
          path: ~/scalardl-node-client-sdk/mochawesome-report

      - store_artifacts:
          path: ~/scalardl-node-client-sdk/mochawesome-report
  deploy:
    docker:
      #Node LTS 14.16 "fermium"
      - image: circleci/node:14.16
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run:
          name: Publish package
          command: npm publish --access public

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          context: "scalar"
      - deploy:
          context: "scalar"
          requires:
            - build
          filters:
            branches:
              only: master
