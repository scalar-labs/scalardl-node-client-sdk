# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    machine: true
      # set a fixed version for the image circleci/openjdk:8-jdk-node-browsers
    image: circleci/openjdk:8-jdk-node-browsers

    working_directory: ~/scalardl-node-client-sdk

    steps:
      - checkout
      # Download and cache dependencies.
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}

      - run:
          name: Install cqlsh
          # We need to edit DEFAULT_CQLVER defined in the cqlsh script
          # to connect to the server without --cqlversion command line option
          command: |
            curl -O https://bootstrap.pypa.io/2.7/get-pip.py
            sudo python get-pip.py
            sudo pip install cqlsh
            sudo sed -i "s/^DEFAULT_CQLVER = .*/DEFAULT_CQLVER = '3.4.4'/" /usr/local/bin/cqlsh

      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: Docker login
          command: |
            echo ${GHCR_PAT} | docker login https://ghcr.io -u ${GHCR_USERNAME} --password-stdin

      - run:
          name: Run docker-compose up
          command: docker-compose up -d
          working_directory: .circleci/

      - run:
          name: Wait for Cassandra
          # dockerize command is included in circleci/openjdk:8-jdk image
          command: dockerize -wait tcp://127.0.0.1:9042 -timeout 1m

      - run:
          name: Install schema for function purpose on Cassandra
          command: cqlsh -f .circleci/function_schema.cql

      - run:
          name: Wait for Scalardl
          command: dockerize -wait tcp://127.0.0.1:50051 -timeout 1m

      - run:
          command: npm install

      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      # run tests!
      - run:
          command: npm test
          environment:
            MOCHA_FILE: "~/scalardl-node-client-sdk/mochawesome-report/mochawesome.html"
          when: always

      - store_test_results:
          path: ~/scalardl-node-client-sdk/mochawesome-report

      - store_artifacts:
          path: ~/scalardl-node-client-sdk/mochawesome-report
  deploy:
    docker:
      #Node LTS 14.16 "fermium"
      - image: circleci/node:14.16
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run:
          name: Publish package
          command: npm publish --access public

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          context: "scalar"
      - deploy:
          context: "scalar"
          requires:
            - build
          filters:
            branches:
              only: master
