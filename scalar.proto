syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.scalar.dl.rpc";
option java_outer_classname = "ScalarProto";

import "google/protobuf/empty.proto";
import "scalar/protobuf/admin.proto";

package rpc;

// Ledger service definition.
service Ledger {
    rpc RegisterContract (ContractRegistrationRequest) returns (google.protobuf.Empty) {
    }
    rpc ListContracts (ContractsListingRequest) returns (ContractsListingResponse) {
    }
    rpc ExecuteContract (ContractExecutionRequest) returns (ContractExecutionResponse) {
    }
    rpc ValidateLedger (LedgerValidationRequest) returns (LedgerValidationResponse) {
    }
    rpc RetrieveAssetProof (AssetProofRetrievalRequest) returns (AssetProofRetrievalResponse) {
    }
}

service LedgerPrivileged {
    rpc RegisterCert (CertificateRegistrationRequest) returns (google.protobuf.Empty) {
    }
    rpc RegisterFunction (FunctionRegistrationRequest) returns (google.protobuf.Empty) {
    }
    rpc RetrieveState (StateRetrievalRequest) returns (StateRetrievalResponse) {
    }
}

message CertificateRegistrationRequest {
    string cert_holder_id = 1;
    uint32 cert_version = 2;
    string cert_pem = 3;
    bool via_proxy = 4;
}

message FunctionRegistrationRequest {
    string function_id = 1;
    string function_binary_name = 2;
    bytes function_byte_code = 3;
    bool via_proxy = 4;
}

message ContractRegistrationRequest {
    string contract_id = 1;
    string contract_binary_name = 2;
    bytes contract_byte_code = 3;
    string contract_properties = 4;
    string cert_holder_id = 5;
    uint32 cert_version = 6;
    bytes signature = 7;
    bool via_proxy = 8;
}

message ContractsListingRequest {
    string cert_holder_id = 1;
    uint32 cert_version = 2;
    string contract_id = 3;
    bytes signature = 4;
}

message ContractExecutionRequest {
    string contract_id = 1;
    string contract_argument = 2;
    string cert_holder_id = 3;
    uint32 cert_version = 4;
    string function_argument = 5;
    bytes signature = 6;
    bool pre_execution = 7;
    repeated string ordering_keys = 8;
}

message LedgerValidationRequest {
    string asset_id = 1;
    uint32 start_age = 2;
    uint32 end_age = 3;
    string cert_holder_id = 4;
    uint32 cert_version = 5;
    bytes signature = 6;
}

message AssetProofRetrievalRequest {
    string asset_id = 1;
    int32 age = 2;
    string cert_holder_id = 3;
    uint32 cert_version = 4;
    bytes signature = 5;
}

message StateRetrievalRequest {
    string transaction_id = 1;
}

message ContractsListingResponse {
    string json = 1;
}

message ContractExecutionResponse {
    string result = 1; // a result of contract execution
    repeated AssetProof proofs = 2; // proofs given from the ledger server
}

message LedgerValidationResponse {
    uint32 status_code = 1;
    AssetProof proof = 2; // a proof given from the ledger server
}

message AssetProofRetrievalResponse {
    AssetProof proof = 1;
    string ledger_name = 2;
}

message AssetProof {
    string asset_id = 1;
    uint32 age = 2;
    string nonce = 3;
    bytes hash = 4;
    bytes signature = 5;
}

message StateRetrievalResponse {
    enum TransactionState {
        UNSET = 0;
        COMMITTED = 1;
        ABORTED = 2;
        UNKNOWN = 3;
    }
    TransactionState state = 1;
}

message Status {
    uint32 code = 1;
    string message = 2;
}

// Proof registry service definition.
service ProofRegistry {
    rpc RegisterProofs (ProofsRegistrationRequest) returns (google.protobuf.Empty) {
    }
    rpc RetrieveProof (ProofRetrievalRequest) returns (ProofRetrievalResponse) {
    }
}

message ProofsRegistrationRequest {
    repeated AssetProof proofs = 1;
}

message ProofRetrievalRequest {
    string asset_id = 1;
}

message ProofRetrievalResponse {
    AssetProof proof = 1;
}

service Proxy {
    rpc RegisterCert (CertificateRegistrationRequest) returns (google.protobuf.Empty) {
    }
    rpc RegisterContract (ContractRegistrationRequest) returns (google.protobuf.Empty) {
    }
    rpc RegisterFunction (FunctionRegistrationRequest) returns (google.protobuf.Empty) {
    }
    rpc ExecuteContract (ContractExecutionRequest) returns (ContractExecutionResponse) {
    }
    rpc ValidateLedgers (LedgersValidationRequest) returns (LedgersValidationResponse) {
    }
    rpc ProxyResponse (IdentifiableResponse) returns (google.protobuf.Empty) {
    }
}

message ReturnableRequest {
    string id = 1;
    oneof request {
        CertificateRegistrationRequest certificate_registration_request = 2;
        ContractRegistrationRequest contract_registration_request = 3;
        FunctionRegistrationRequest function_registration_request = 4;
        ContractExecutionRequest contract_execution_request = 5;
    }
    string hostname = 6;
    uint32 port = 7;
    bytes signature = 8; // TODO: to be deleted later
}

message LedgersValidationRequest {
    string asset_id = 1;
    string cert_holder_id = 2;
    uint32 cert_version = 3;
    bytes signature = 4;
}

message IdentifiableResponse {
    string id = 1;
    oneof response {
        ContractExecutionResponse contract_execution_response = 2;
    }
    uint32 status_code = 3;
}

message LedgersValidationResponse {
    repeated AssetProofRetrievalResponse response = 1;
}
